#include <QApplication>
#include <QPushButton>
#include <QLabel>
#include <QVBoxLayout>
#include <QWidget>
#include <QStringList>
#include <QRandomGenerator>

int main(int argc, char *argv[])
{
    QApplication app(argc, argv);

    // Создаем основное окно
    QWidget window;
    window.setWindowTitle("Мотивационное приложение");

    // Создаем метку для отображения цитаты
    QLabel *quoteLabel = new QLabel("Нажмите кнопку для мотивации!", &window);

    // Список мотивационных цитат
    QStringList quotes;
    quotes << "Секрет вашего успеха в том, что вы никогда не сдаётесь."
           << "Не бойтесь делать ошибки. Это путь к успеху."
           << "Каждый день – это новая возможность."
           << "Верьте в себя и все станет возможным."
           << "Самое лучшее время для начала – сейчас.";

    // Создаем кнопку
    QPushButton *button = new QPushButton("Получить мотивацию", &window);

    // Соединяем сигнал нажатия кнопки с лямбда-функцией для отображения случайной цитаты
    QObject::connect(button, &QPushButton::clicked, [&]() {
        int randomIndex = QRandomGenerator::global()->bounded(quotes.size());
        quoteLabel->setText(quotes[randomIndex]);
    });

    // Создаем вертикальный макет
    QVBoxLayout *layout = new QVBoxLayout;
    layout->addWidget(button);
    layout->addWidget(quoteLabel);

    // Устанавливаем макет в главное окно
    window.setLayout(layout);
    window.resize(400, 200);
    window.show();

    return app.exec();
}

